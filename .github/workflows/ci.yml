name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Server tests and build
    - name: Server - Install dependencies
      working-directory: ./server
      run: npm ci

    - name: Server - Run tests
      working-directory: ./server
      run: npm test
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}

    - name: Server - Build
      working-directory: ./server
      run: npm run build

    # Client tests and build
    - name: Client - Install dependencies
      working-directory: ./client
      run: npm ci

    - name: Client - Run tests
      working-directory: ./client
      run: npm test

    - name: Client - Build
      working-directory: ./client
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}

  deploy-server:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
          -H "Authorization: Bearer $RENDER_API_KEY"

  deploy-client:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './client/dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
